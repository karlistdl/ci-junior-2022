pipeline {
    agent any
    triggers { 
        pollSCM('*/1 * * * *') 
    }
    stages {
        stage('build') {
            steps {
                echo "Building node app"
            }
        }
        stage('deploy-dev') {
            steps {
                script{
                    deploy("DEV")
                }
            }
        }
        stage('test-dev') {
            steps {
                script{
                    test("DEV")
                }
            }
        }
        stage('deploy-int') {
            steps {
                script{
                    deploy("INT")
                }
            }
        }
        stage('test-int') {
            steps {
                script{
                    test("INT")
                }
            }
        }
        stage('deploy-prd') {
            steps {
                script{
                    deploy("PRD")
                }
            }
        }
        stage('test-prd') {
            steps {
                script{
                    test("PRD")
                }
            }
        }            
    }
}

def deploy(String environment){
    echo "Deployment on ${environment} environmnt triggered.."
    build job: "UI test", parameters: [string(name: "ENVIRONMENT", value:"${environment}")]
}

def test(String environment){
    echo "Tests on ${environment} environmnt triggered.."
    sh "docker run --network=host -d -t --name api_tests_executor_${environment} api_test_executor"
    sh "docker exec api_tests_executor_${environment} cucumber --tags=@${environment} --format html --out test-output/report.html"
    sh "docker cp api_tests_executor_${environment}:/usr/src/api-tests/test-output/report.html report_${environment}.html"
    sh "docker rm -f api_tests_executor_${environment}"
}